// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -------------- //
// tft_driver_pio //
// -------------- //

#define tft_driver_pio_wrap_target 0
#define tft_driver_pio_wrap 25

#define tft_driver_pio_offset_start_wr16 0u
#define tft_driver_pio_offset_start_wr8 11u
#define tft_driver_pio_offset_start_rd8 18u

static const uint16_t tft_driver_pio_program_instructions[] = {
            //     .wrap_target
    0xe001, //  0: set    pins, 1                    
    0xf820, //  1: set    x, 0            side 1     
    0xa0e9, //  2: mov    osr, !x                    
    0x6088, //  3: out    pindirs, 8                 
    0x98a0, //  4: pull   block           side 1     
    0x6028, //  5: out    x, 8                       
    0x7108, //  6: out    pins, 8         side 0 [1] 
    0xb842, //  7: nop                    side 1     
    0xa0e1, //  8: mov    osr, x                     
    0x7008, //  9: out    pins, 8         side 0     
    0x0004, // 10: jmp    4                          
    0xe001, // 11: set    pins, 1                    
    0xf820, // 12: set    x, 0            side 1     
    0xa0e9, // 13: mov    osr, !x                    
    0x6088, // 14: out    pindirs, 8                 
    0x9aa0, // 15: pull   block           side 1 [2] 
    0x7108, // 16: out    pins, 8         side 0 [1] 
    0x000f, // 17: jmp    15                         
    0xe001, // 18: set    pins, 1                    
    0xf880, // 19: set    pindirs, 0      side 1     
    0x80a0, // 20: pull   block                      
    0xe200, // 21: set    pins, 0                [2] 
    0x4208, // 22: in     pins, 8                [2] 
    0xe001, // 23: set    pins, 1                    
    0x8020, // 24: push   block                      
    0x0014, // 25: jmp    20                         
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program tft_driver_pio_program = {
    .instructions = tft_driver_pio_program_instructions,
    .length = 26,
    .origin = -1,
};

static inline pio_sm_config tft_driver_pio_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + tft_driver_pio_wrap_target, offset + tft_driver_pio_wrap);
    sm_config_set_sideset(&c, 2, true, false);
    return c;
}
#endif

